name: "crucible-ci integration test"
description: "Crucible integration tests"
inputs:
  scenarios:
    description: "What workload scenarios to execute"
    required: false
    default: "fio"
  userenvs:
    description: "Which rickshaw userenvs to execute"
    required: false
    default: "default"
  ci_target:
    description: "Which Crucible component to target for integration testing"
    required: false
    default: "none"
  ci_target_dir:
    description: "Where is the Crucible component to target located"
    required: false
    default: "none"
  artifact_tag:
    description: "Tag to include in the filename of the produced artifact"
    required: false
    default: "unset-tag"
  ci_endpoint:
    description: "Which rickshaw endpoint to exercise"
    required: false
    default: "remotehosts"
  ci_build_controller:
    description: "Should the crucible controller be rebuilt and tested"
    required: false
    default: "no"
  ci_param_mode:
    description: "Should crucible use --mv-params or --from-file (single json)"
    required: false
    default: "all"
  ci_controller:
    description: "Whether a CI built controller should be used or not"
    required: false
    default: "no"
  controller_tag:
    description: "A controller tag to pull from the ci controller repository"
    required: false
    default: "none"
runs:
  using: "composite"
  steps:
    - run: sudo ${{ github.action_path }}/../clean-environment/clean-environment.sh --run-environment github
      shell: bash

    - run: ${{ github.action_path }}/ci-environment-info --run-environment github
      shell: bash

    - run: sudo ${{ github.action_path }}/../install-crucible/install-crucible.sh --run-environment github --ci-target ${{ inputs.ci_target }} --ci-target-dir ${{ inputs.ci_target_dir }} --ci-endpoint ${{ inputs.ci_endpoint }} --ci-controller ${{ inputs.ci_controller }} --controller-tag ${{ inputs.controller_tag }}
      shell: bash

    - run: sudo ${{ github.action_path }}/setup-ci-endpoint --run-environment github --ci-endpoint ${{ inputs.ci_endpoint }}
      shell: bash

    - run: sudo ${{ github.action_path }}/run-ci-stage1 --run-environment github --scenarios ${{ inputs.scenarios }} --userenvs ${{ inputs.userenvs }} --ci-endpoint ${{ inputs.ci_endpoint }} --ci-build-controller ${{ inputs.ci_build_controller }} --ci-param-mode ${{ inputs.ci_param_mode }}
      shell: bash

    - uses: actions/upload-artifact@v4
      with:
        name: crucible-ci-artifact__integration-tests__${{ github.run_number }}.${{ github.run_attempt }}__${{ inputs.artifact_tag }}
        path: /var/lib/crucible-ci-artifact*.tar.xz
        retention-days: 5
        if-no-files-found: error

    - run: sudo ${{ github.action_path }}/../clean-environment/clean-environment.sh --run-environment github
      shell: bash

    - run: sudo ${{ github.action_path }}/run-ci-stage2 --run-environment github
      shell: bash
